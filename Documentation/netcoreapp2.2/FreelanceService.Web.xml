<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FreelanceService.Web</name>
    </assembly>
    <members>
        <member name="T:FreelanceService.Web.Controllers.AccountController">
            <summary>
            The controller is responsible for user registration, login and authentication
            </summary>
        </member>
        <member name="M:FreelanceService.Web.Controllers.AccountController.#ctor(FreelanceService.BLL.Interfaces.IEmailService,FreelanceService.BLL.Interfaces.IUserService)">
            <summary>
            Dependency Injection User and Email service
            </summary>
            <param name="emailService"></param>
            <param name="userService"></param>
        </member>
        <member name="M:FreelanceService.Web.Controllers.AccountController.Login">
            <summary>
            User authorization page. If the user is authorized, then he will be redirected to his profile
            </summary>
            <returns>View Account/Login</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.AccountController.Login(FreelanceService.BLL.Models.LoginViewModel)">
            <summary>
            The client side sends the LoginViewModel to the server to authorize the user. With successful authorization redirects to user profile and added authorization cookies
            </summary>
            <param name="model">model of type LoginVewModel</param>
            <returns>View Profile/Profile</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.AccountController.Register">
            <summary>
            User registration page.
            </summary>
            <returns>View Account/Register</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.AccountController.Register(FreelanceService.BLL.Models.RegisterViewModel)">
            <summary>
            The client side sends the RegistrationViewModel to add a new user. If the registration is successful, the user is authenticate
            </summary>
            <param name="model">model of type RegisterViewModel</param>
            <returns>View Profile/Profile</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.AccountController.Authenticate(FreelanceService.BLL.DTO.UserDTO)">
            <summary>
            User authentication method
            </summary>
            <param name="user">model type of UserDTO</param>
            <returns></returns>
        </member>
        <member name="T:FreelanceService.Web.Controllers.HomeController">
            <summary>
            Display all jobs in system
            </summary>
        </member>
        <member name="M:FreelanceService.Web.Controllers.HomeController.Index(System.String)">
            <summary>
            View all jobs
            </summary>
            <returns>View Home/Index</returns>
        </member>
        <member name="T:FreelanceService.Web.Controllers.ProfileController">
            <summary>
            Ð¡ontroller is responsible for displaying profile information, profile edit, adding new jobs by the customer
            </summary>
        </member>
        <member name="M:FreelanceService.Web.Controllers.ProfileController.#ctor(FreelanceService.BLL.Interfaces.IJobService,FreelanceService.BLL.Interfaces.IUserService,FreelanceService.BLL.Interfaces.IProfileService)">
            <summary>
            Dependency Injection for jobService and userService
            </summary>
            <param name="jobService"></param>
            <param name="userService"></param>
        </member>
        <member name="M:FreelanceService.Web.Controllers.ProfileController.Profile">
            <summary>
            Redirection to the profile of the executor or customer
            </summary>
        </member>
        <member name="M:FreelanceService.Web.Controllers.ProfileController.ProfileCustomer">
            <summary>
            View ProfileCustomer
            </summary>
            <returns>View Profile/ProfileCusomer</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.ProfileController.ProfileExecutor">
            <summary>
            View Profile Executor
            </summary>
            <returns>View Profile/ProfileExecutorr</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.ProfileController.Edit">
            <summary>
            View edit profile
            </summary>
            <returns>View Profile/Edit</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.ProfileController.Edit(FreelanceService.BLL.Models.ProfileEditViewModel)">
            <summary>
            Request to edit user data
            </summary>
            <param name="model">model type of ProfileEditViewModel</param>
            <returns>View Profile/Profike</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.ProfileController.CreateJob">
            <summary>
            View create new job of customer
            </summary>
            <returns>View Profile/CreateJob</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.ProfileController.CreateJob(FreelanceService.BLL.Models.CreateJobViewModel)">
            <summary>
            Request to create a new job for the customer
            </summary>
            <param name="model"></param>
            <returns>View Home/Index</returns>
        </member>
        <member name="M:FreelanceService.Web.Controllers.ProfileController.Logout">
            <summary>
            Logout user
            </summary>
            <returns>View Account/User</returns>
        </member>
    </members>
</doc>
